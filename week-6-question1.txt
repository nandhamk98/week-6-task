1: question
<!DOCTYPE html>
<html>
<body>
 <script>
 alert( “I’m JavaScript!’);
 </script>
 Whats the error in this ?
</body>
</html>

Answers
<!DOCTYPE html>
<html>
  <body>
    <script>
      alert("I’m JavaScript!");
    </script>
    Whats the error in this ?
  </body>
</html>

----------------------------------------------------------------

2: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

scripts.js

alert(“I’m invoked!”);

Answers:

fix.html

<!DOCTYPE html>
<html>
  <body>
    <script src="script.js"></script>
  </body>
</html>

scripts.js

alert("I’m invoked!");

----------------------------------------------------------------

3: question

explain.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

alert("I'm JavaScript!");
alert('Hello') // this line is not having semicolon
alert(`Wor
 ld`)
alert(3 +
1
+ 2); // this is multiple line code and its working

Answers: 
Explanation =>
1.first alert function will create a pop up notification in the browser with the message given in the function
2.second alert function will create a pop up notification in the browser with the message given in the function, eventhough the semicolon is missed at the end
3.with the help of back tick multi line message is notified in browser with third alert function
4.in the fourth alert function the calculation happens first then the final result is notified in browser.


4: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>


script.js

let admin=9, fname=10.5; 
fname = "Guvi";
lname = "geek"
admin = fname+lname;
alert( admin ); // "Guvi geek"

Answers: 

script.js 

let admin = 9,
  fname = 10.5;
fname = "Guvi";
lname = "geek";
admin = `${fname}  ${lname}`;
alert(admin); // "Guvi geek"


5: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let fname=10.5; 
fname = "Guvi";
lname = "geek"
let name = fname+lname;
alert( 'hello ${name}' );

Answers: 

script.js

let fname = 10.5;
fname = "Guvi";
lname = "geek";
name = `${fname}  ${lname}`;
alert(`hello ${name}`);

6: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let a = prompt("First number?");
let b = prompt("Second number?");
alert(a + b);

Answers: 

script.js

let a = prompt("First number?");
let b = prompt("Second number?");
alert(parseInt(a) + parseInt(b));

7: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let a = prompt("First number?");
let b = prompt("Second number?");
alert(a + b);

Answers: 

script.js

let a = prompt("First number?");
let b = prompt("Second number?");
alert(parseInt(a) + parseInt(b));

8: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let a = prompt("First number?");
let b = prompt("Second number?");
alert(a + b);

Answers: 

script.js

let a = prompt("First number?");
let b = prompt("Second number?");
alert(parseInt(a) + parseInt(b));

9: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>


script.js

var a = "2" > "12";
//Don't touch below this
if (a) {
  console.log("Code is Blasted")
}
else
{
  console.log("Diffused") 
}

Answers: 

script.js

var a = 2 > 12;
//Don't touch below this
if (a) {
  console.log("Code is Blasted")
}
else
{
  console.log("Diffused") 
}

Explanation: make the values which is being compared into number datatype

10: question 

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let a = prompt("Enter a number?");
//Don't modify any code below this
if (a) {
 console.log( 'OMG it works for any number inc 0' );
}
else
{
 console.log( "Success" );
}

Answers: 

script.js 

let a = prompt("Enter a number?");
a = parseInt(a);
//Don't modify any code below this
if (a) {
  console.log("OMG it works for any number inc 0");
} else {
  console.log("Success");
}

Explanation: convert the value from 'a' variable into number datatype .

11: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let value = prompt('How many runs you scored in this ball');
if (value === 4) {
      console.log("You hit a Four");
} else if (value === 6) {
      console.log("You hit a Six");
} else {
      console.log("I couldn't figure out");
}

Answers: 

script.js

let value = prompt('How many runs you scored in this ball');
value = parseInt(value);
if (value === 4) {
      console.log("You hit a Four");
} else if (value === 6) {
      console.log("You hit a Six");
} else {
      console.log("I couldn't figure out");
}

Explanation: convert the value from 'value' variable into number datatype .

12: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let login = 'Employee';
let message = (login == 'Employee') ? :
  (login == 'Director') ? 'Greetings' :
  (login == '') ? 'No login' :
  '';
console.log(message);

Answers: 

script.js

let login = "Employee";
let message =
  login == "Employee"
    ? login == "Director"
      ? "Greetings"
      : login == ""
      ? "No login"
      : "welcome"
    : "";
console.log(message);

13: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

// You cant change the value of the msg
let message;
if (null || 2 || undefined )
{
 let message = "welcome boss";
}
else
{
 let message = "Go away";
}
  console.log(message);

Answers:

script.js

// You cant change the value of the msg
let message;
if (null || 2 || undefined) {
  message = "welcome boss";
} else {
  message = "Go away";
}
console.log(message);

Explanation: remove the let keyword from the if-else block.

14: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let message;
let lock = 2;
//Dont change any code below this 
if (null || lock || undefined )
{
  message = "Go away";
}
else
{
 message = "welcome";
}
  console.log(message);

Answers:

script.js
let message;
let lock = 0;
//Dont change any code below this 
if (null || lock || undefined )
{
  message = "Go away";
}
else
{
 message = "welcome";
}
  console.log(message);

  Explanation: change the value of the lock to 0.

15: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let message;
let lock = 2;
//Dont change any code below this
if (lock && " " || undefined )
{
  message = "Go away";
}
else
{
 message = "welcome";
}
console.log(message);

Answers: 

script.js
let message;
let lock = false;
//Dont change any code below this
if (lock && " " || undefined )
{
  message = "Go away";
}
else
{
 message = "welcome";
}
console.log(message);

Explanation: change the lock value to boolean false.

16: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

//You can change only 2 characters
let i = 3;
while (i) {
  console.log( --i );
}

Answers:

script.js

//You can change only 2 characters
let i = 3;
while (i) {
  console.log(i--);
}

Explanation: change from --i to i-- .

17: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let num = 1
console.log(num)
num += 1
console.log(num)
num += 1
console.log(num)
num += 1
console.log(num)
num += 1
console.log(num)
num += 1
console.log(num)
num += 1
console.log(num)
num += 1
console.log(num)
num += 1
console.log(num)
num += 1
console.log(num)

Answers: 

script.js

let num = 1;
for (let i = num; i <= 10; i++) {
  console.log(i);
}

Explanation: use for loop.

18: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

//You are allowed to modify only one character 
for (let num = 2; num <= 20; num += 1) {
  console.log(num)
}

Answers: 

script.js

//You are allowed to modify only one character 
for (let num = 2; num <= 20; num += 2) {
  console.log(num)
}

Explanation: change the value incrementation from 1 to 2.

19: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let gifts = ["teddy bear", "drone", "doll"];
for (let i = 0; i < 3; i++) {
  console.log('Wrapped ${'gifts[i]'} and added a bow!');
}

Answers:

scripts.js 

let gifts = ["teddy bear", "drone", "doll"];
for (let i = 0; i < 3; i++) {
  console.log(`Wrapped ${gifts[i]} and added a bow!`);
}

Explanation : replaced the log function's argumnet into correct format.

20: question

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”script.js”></script>
</body>
</html>

script.js

let countdown = 100;
while (countdown > 0) {
  countdown--;
  if(countdown == 0)
  {
   console.log("bomb triggered");
  }
}

Answers: 

script.js

let countdown = 100;
while (countdown > 1) {
  countdown--;
  if (countdown == 0) {
    console.log("bomb triggered");
  }
}

explanation : replace the while condition from 0 to 1.

22: question

var lemein = "0";
var lemeout = 0;
var msg = "";
if (lemein) {
  msg += "hi";
}
if (lemeout) {
  msg += "Hello";
}
console.log(msg);

output:
hi

Explanation: lemein is string value so any string value execept empty string is true, but lemeout is number value of 0 so it represents false.

23: question

var lemein = "0";
var lemeout = 0;
var msg = "";
if (lemein) {
  msg += "hi";
}
if (lemeout) {
  msg += "Hello";
}
console.log(msg);

output:
hi

Explanation: lemein is string value so any string value execept empty string is true, but lemeout is number value of 0 so it represents false.

